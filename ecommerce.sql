-- The database is where the table will be hosted/housed
-- There are 9 tables that have to be pulled to the database
-- Essence of the atcivity is to allow us learn of the ecommerce and also areas of improvement
-- Data analysis can be done using various tools but in this case the choice is sql, same should allow for thorough deep dive
-- The only way to make some of the these concepts is through going over them again and again

-- As one engages in the analysis process to gain insights and also answer business question the one thought 
-- that is very vital is understanding the dataset

-- First we start by creating the tables which will be joined to each other based on relevance

-- olist sellers dataset

create table olist_sellers (
	seller_id text,
	seller_zip_code text,
	seller_city text,
	seller_state text
)

copy olist_sellers
from 'C:\Users\KEVIN\Desktop\Olist\olist_sellers_dataset.csv'
with (format csv, header)

select * from olist_sellers
limit 5

-- Product Category transalation

create table product_transalation (
	product_category_name text,
	product_category_name_english text
)

copy product_transalation
from 'C:\Users\KEVIN\Desktop\Olist\product_category_name_translation.csv'
with (format csv, header)

select * from product_transalation
limit 5

create table products_dataset(
	product_id text,
	product_category_name text,
	product_name_length int,
	product_description_length int,
	product_photos_qty int,
	product_weight decimal,
	product_length_cm decimal,
	product_height_cm decimal,
	product_width_cm decimal
)

copy products_dataset
from 'C:\Users\KEVIN\Desktop\Olist\olist_products_dataset.csv'
with (format csv, header)

select * from products_dataset
limit 5

create table orders_dataset(
	order_id text,
	customer_id text,
	order_status text,
	order_purchase_timestamp timestamptz,
	order_approved_at timestamptz,
	order_delivered_carrier_date timestamptz,
	order_delivered_customer_date timestamptz,
	order_estimated_delivery_date timestamptz
)

copy orders_dataset
from 'C:\Users\KEVIN\Desktop\Olist\olist_orders_dataset.csv'
with (format csv, header)


select * from orders_dataset
limit 5

create table order_review_dataset(
	review_id text,
	order_id text,
	review_score decimal,
	review_comment_title text,
	review_comment_message text,
	review_creation_date timestamptz,
	review_answer_timestamp timestamptz
)

copy order_review_dataset
from 'C:\Users\KEVIN\Desktop\Olist\olist_order_reviews_dataset.csv'
with (format csv, header)

select * from order_review_dataset
limit 5

create table order_payment(
	order_id text,
	payment_sequential int,
	payment_type text,
	payment_installment int,
	payment_value decimal
)

copy order_payment
from 'C:\Users\KEVIN\Desktop\Olist\olist_order_payments_dataset.csv'
with (format csv, header)

select * from order_payment
limit 5

create table order_items(
	order_id text,
	order_item_id text,
	product_id text,
	seller_id text,
	shipping_limit_id timestamptz,
	price decimal,
	freight_value decimal
)

copy order_items
from 'C:\Users\KEVIN\Desktop\Olist\olist_order_items_dataset.csv'
with (format csv, header)

select * from order_items
limit 5

create table geolocation(
	geolocation_zip_code text,
	geolocation_lat decimal,
	geolocation_lon decimal,
	geolocation_city text,
	geolocation_state text
)

copy geolocation
from 'C:\Users\KEVIN\Desktop\Olist\olist_geolocation_dataset.csv'
with (format csv, header)

select * from geolocation
limit 5

drop table customer_dataset

create table customers_dataset(
	customer_id text,
	customer_unique_id text,
	customer_zip_code text,
	customer_city text,
	customer_state text
)

copy customers_dataset
from 'C:\Users\KEVIN\Desktop\Olist\olist_customers_dataset.csv'
with (format csv, header)

select * from customers_dataset
limit 5

-- All the nine table have been uploaded successful, attention shift to business questions, which will direct on how 
-- join the tables and also help us understand the table releavance
-- Tables craeted
	-- Geolocation
	-- olist_sellers
	-- order_tems
	-- order_payment
	-- order_review_dataset
	-- product_transalation
	-- Product dataset
	-- Geolocation
	-- Customers_ dataset

-- Business Questions 
	-- What is the total revenue generated by olist and how has it changed over time
	-- How many orders were placed on olist and how does this vary month on month
	-- What are the most popular product categories on Olist and how does this vary by category or payment method
	-- What is the average order value on olist, and how does vary by product category or payment method
	-- How many sellers are active on olist and how does the number change over time
	-- What is the distribution of seller ratings on olist and how does this impact sales perfromance
	-- How many customers have made repeat purchases on olist and what percentage of total sales do they account for
	-- What is average customer ratings on olist for products sold on olist and does this impact sales performance
	-- What is the average order cancellation rate on olist and how does this impact sales performance

-- What is the total revenue generated by olist and how has it changed over time
	-- Revenue calculation (total goods sold * cost of the item)
	
select
date_part('year', shipping_limit_id) as year_of_shipping,
sum(price + freight_value) as total_revenue
from order_items
group by year_of_shipping
order by year_of_shipping


-- Transaction period 
	-- 2016 - 57,183.21
	-- 2017 - 7,000,608.86
	-- 2018 - 8,785,262.97
	-- 2020 - 498.28

select *
from order_items
where date_part('year', shipping_limit_id) = 2018
order by price desc

-- Based on the data, the business started transacting in 2016, and they were able to push 48,786, there was an upward surge in the year 2017 where the business did 100 times more that what was done the previous year.
-- 2018 also noted an increase in sales as compared to the previous year
-- There was a massive drop/decline in 2020, based on early investigation, the business only had 4 transactions

-- understanding why the values are low in 2020
-- only 4 transactions were done on the mentioned year hence the poor numbers
-- It will be interesting to understand what the ecommerce was heavily involved in pushing, being the mentioned period was
-- during the pandemic, most consumers moved online and this should have helped the business if the product was online with customers preference at that time.

select *
from order_items
where date_part('year', shipping_limit_id) = 2020




select 
date_part('month', shipping_limit_id) as month_name,
count(*)
from order_items
group by date_part('month', shipping_limit_id)
order by month_name

-- Orders tend to be highest in the months of March, April, May, June ,July and August, August records the highest numbers
-- The orders are lowest in the months of October and September 
-- Same applies in the months of November and December as they are lowest as compared to January which recorded 8000 orders
-- The numbers are basically cumulative for the years that the business has been transacting
-- It would be interesting to see how the same vary year on year for the years the business have been transacting

select 
date_part('year', shipping_limit_id) as year_transaction,
date_part('month', shipping_limit_id) as month_name,
count(*)
from order_items
group by date_part('month', shipping_limit_id), year_transaction
order by year_transaction, month_name

-- In 2016 Most of the orders came through in the month of October
-- In 2017 -- November and December had the highest orders
-- In 2018 -- March, May and August had the highest number of orders, with orders at over 8,000
-- In 2019 no business happened
-- In 2020 they were neglible

-- Most popular products category and how the same vary by category or payment method

select 
pd.product_category_name,
count(oi.seller_id) as popular_products
from order_items oi
join products_dataset pd
using(product_id)
group by pd.product_category_name
order by popular_products desc

-- Cama_mesa_bahno are the most popular product has it has been ordered over 10000 times
-- Baleza_saude, Esporte_lazer, moveis_decoracao, informatica close in on the list of the top 5
-- Segurous are the least popular as they only order twice

-- Combining the same with the payment method

select 
pd.product_category_name,
op.payment_type,
count(oi.seller_id) as popular_products
from order_items oi
join products_dataset pd
using(product_id)
join order_payment op
using(order_id)
group by pd.product_category_name, op.payment_type
order by popular_products desc

-- Most popular Categories are all paid using Credit card
-- Least popular categories are paid using debit card or even voucher
-- The other payment methods are through boleto and not_defined(This is where the payment method was specified)


-- What is the average order value on olist, and how does vary by product category or payment method


-- Tables needed for the question at hand

-- order_items
-- order_payment
-- Payment method

select 
-- oi.order_id,
op.payment_type as payment_type,
round(avg(oi.price),0) as average_order_value
--pt.product_category_name_english
from order_items oi
join order_payment op
using(order_id)
join products_dataset pd
on pd.product_id = oi.product_id
join product_transalation pt
on pd.product_category_name = pt.product_category_name
group by op.payment_type
order by average_order_value desc
--, pt.product_category_name_english

-- Products paid through Credit Card has a higher average at 127
-- Boleto and Voucher have an average of 105
-- Debit card have an average of 109


select 
-- oi.order_id,
--op.payment_type as payment_type,
pt.product_category_name_english as category,
round(avg(oi.price),0) as average_order_value
--pt.product_category_name_english
from order_items oi
join order_payment op
using(order_id)
join products_dataset pd
on pd.product_id = oi.product_id
join product_transalation pt
on pd.product_category_name = pt.product_category_name
group by category
order by average_order_value desc


-- Computers category have the highest average - 1104
-- Diapers & Hygiene, Flowers and Home_comfort_2 have the lowest average order value of less than 50

select * from olist_sellers
select * from customers_dataset
select * from order_items

select
count(distinct seller_id)
from order_items

-- We have 3095 unique sellers on the olist dataset

select
date_part('year', shipping_limit_id) as year_shipped,
count(distinct seller_id)
from order_items
group by year_shipped

-- Customers have been growing year on year from 145 in 2016 to 2398 in 2398, but the same fell drastically in 2020

select 
distinct(review_score)
from order_review_dataset
order by review_score

-- The review score ranges between 1 and 5

select 
review_score,
sum(price) sales
from order_items oi
join order_review_dataset od
using(order_id)
group by review_score
order by sales desc

-- Sellers with the highest rating have the highest sales for this case its 5 and 4 though 1 come through as third
-- Seller with low rating of 2 have low sales


select 
count(*)
from(
select
seller_id,
count(seller_id) as number_of_sellers
from order_items
--where (select count(seller_id) from order_items) > 2
group by seller_id
having count(seller_id) > 2
order by number_of_sellers desc)

select
(select
sum(price)
from(
select
seller_id,
count(seller_id) as number_of_sellers,
sum(price) as price
from order_items
--where (select count(seller_id) from order_items) > 2
group by seller_id
having count(seller_id) > 2
order by number_of_sellers desc))/(select 
sum(price)
from order_items) * 100

-- Repeat order account for 98% of the total sales, the other 2% is in on the time purchase customers



































